name: iOS Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Install Flutter dependencies
      run: flutter pub get

    - name: Install Apple Certificate
      env:
        APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      run: |
        # Create temporary keychain
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        KEYCHAIN_PASSWORD=temporary-password
        
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        security default-keychain -s "$KEYCHAIN_PATH"
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
        
        # Import certificate
        echo "$APPLE_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
        security import certificate.p12 -P "$APPLE_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
        security list-keychain -d user -s "$KEYCHAIN_PATH"
        
        # Allow codesign to access the certificate
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

    - name: Install Provisioning Profile
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        # Decode and install provisioning profile
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > "$PP_PATH"
        
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp "$PP_PATH" ~/Library/MobileDevice/Provisioning\ Profiles/

    - name: Build iOS App
      env:
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        cd ios
        
        # Build Flutter app first
        flutter build ios --release --no-codesign
        
        # Archive with automatic signing - NO PROVISIONING_PROFILE!
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -archivePath build/Runner.xcarchive \
          archive \
          DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
          -allowProvisioningUpdates

    - name: Export IPA
      run: |
        cd ios
        
        # Create ExportOptions.plist for automatic signing
        cat > ExportOptions.plist <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
        </dict>
        </plist>
        EOF
        
        # Export archive to IPA
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build/ios \
          -exportOptionsPlist ExportOptions.plist

    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: ios/build/ios/*.ipa
